#!/usr/bin/python3

# ~/dev/py/nlhtree_py/nlhCheckInDataDir

import os
import re
import sys
import time
from argparse import ArgumentParser

from xlattice import Q
from nlhtree import (__version__, __version_date__,
                     NLHTree,
                     )


def main():

    pathToInit = os.path.join('nlhtree', '__init__.py')
    version = re.search("__version__\s*=\s*'(.*)'",
                        open(pathToInit).read()).group(1)
    versionDate = re.search("__version_date__\s*=\s*'(.*)'",
                            open(pathToInit).read()).group(1)

    appName = 'nlhSaveToUDir %s' % __version__
    UDIR = os.environ['DVCZ_UDIR']

    # parse the command line ----------------------------------------
    DESC   = \
        'given an NLHTree listing and a data directory, list any files in the list not present in the directory, '

    parser = ArgumentParser(description=DESC)

    parser.add_argument('-1', '--usingSHA', action='store_true',
                        help='using the 160-bit SHA1 hash')

    parser.add_argument('-b', '--listFile', default='list.nlh',
                        help='where to write listing (default = list.nlh)')

    parser.add_argument('-d', '--dataDir', default='.',
                        help='path to data directory')

    parser.add_argument('-j', '--justShow', action='store_true',
                        help='show options and exit')

    parser.add_argument('-T', '--testing', action='store_true',
                        help='this is a test run')

    parser.add_argument('-V', '--showVersion', action='store_true',
                        help='print the version number and exit')

    parser.add_argument('-v', '--verbose', action='store_true',
                        help='be chatty')

    args = parser.parse_args()

    if args.showVersion:
        print(appName)
        sys.exit(0)

    # fixups --------------------------------------------------------

    if args.testing:
        # output appears under tmp/
        # XXX this should be fixed to interpose # a random directory name
        #   that is not already in use
        # XXX This behavior needs to be clearly documented.
        listFile = os.path.join('tmp', listFile)

    # sanity checks -------------------------------------------------

    if not (args.testing or args.justShow):
        if not os.path.exists(args.dataDir):
            print("%s does not exist; cannot continue" % args.dataDir)
            sys.exit(1)

    # complete setup ------------------------------------------------

    if args.verbose or args.justShow:
        print("%s %s" % (appName, __version_date__))

    if args.verbose or args.justShow:
        print('dataDir          = ' + str(args.dataDir))
        print('justShow         = ' + str(args.justShow))
        print('listFile         = ' + str(args.listFile))
        print('showVersion      = ' + str(args.showVersion))
        print('testing          = ' + str(args.testing))
        print('usingSHA        = ' + str(args.usingSHA))
        print('verbose          = ' + str(args.verbose))

    # do what's required --------------------------------------------
    if not args.justShow:
        tree = NLHTree.parseFile(args.listFile, args.usingSHA)
        tree.checkInDataDir(args.dataDir)

if __name__ == '__main__':
    main()
