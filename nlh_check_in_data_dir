#!/usr/bin/python3
# ~/dev/py/nlhtree_py/nlhCheckInDataDir

"""
Command line wrapper for the check_in_data_dir function, which verifies
that the nodes of an NLHTree are present in a data directory.
"""

import os
import sys
from argparse import ArgumentParser

from xlattice import (check_using_sha,
                      parseUsingSHA, fix_using_sha, show_using_sha)
from nlhtree import (__version__, __version_date__, NLHTree)


def main():
    """
    Command line wrapper for the check_in_data_dir function, which verifies
    that the nodes of an NLHTree are present in a data directory.
    """

    app_name = 'nlh_check_in_data_dir %s' % __version__
    # UDIR = os.environ['DVCZ_UDIR']

    # parse the command line ----------------------------------------
    desc =\
        'list any files in the NLHTree not present in the directory, '

    parser = ArgumentParser(description=desc)

    parser.add_argument('-b', '--list_file', default='list.nlh',
                        help='where to write listing (default = list.nlh)')

    parser.add_argument('-d', '--data_dir', default='.',
                        help='path to data directory')

    parser.add_argument('-j', '--just_show', action='store_true',
                        help='show options and exit')

    parser.add_argument('-T', '--testing', action='store_true',
                        help='this is a test run')

    parser.add_argument('-V', '--show_version', action='store_true',
                        help='print the version number and exit')

    parseUsingSHA(parser)

    args = parser.parse_args()

    if args.show_version:
        print(app_name)
        sys.exit(0)

    # fixups --------------------------------------------------------
    fix_using_sha(args)

    if args.testing:
        # output appears under tmp/
        # XXX this should be fixed to interpose # a random directory name
        #   that is not already in use
        # XXX This behavior needs to be clearly documented.
        args.list_file = os.path.join('tmp', args.list_file)

    # sanity checks -------------------------------------------------
    check_using_sha(args.using_sha)

    if not (args.testing or args.just_show):
        if not os.path.exists(args.data_dir):
            print("%s does not exist; cannot continue" % args.data_dir)
            sys.exit(1)

    # complete setup ------------------------------------------------

    if args.verbose or args.just_show:
        print("%s %s" % (app_name, __version_date__))

    if args.verbose or args.just_show:
        print('data_dir          = ' + str(args.data_dir))
        print('just_show         = ' + str(args.just_show))
        print('list_file         = ' + str(args.list_file))
        print('show_version      = ' + str(args.showVersion))
        print('testing          = ' + str(args.testing))
        show_using_sha(args)

    # do what's required --------------------------------------------
    if not args.just_show:
        tree = NLHTree.parse_file(args.list_file, args.using_sha)
        tree.check_in_data_dir(args.data_dir)

if __name__ == '__main__':
    main()
